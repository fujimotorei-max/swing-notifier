name: swing-notifier

concurrency:
  group: swing-notifier
  cancel-in-progress: true

on:
  schedule:
    # 午前（JST 09:00–11:30）= UTC 00:00–02:30
    - cron: "0,30 0-2 * * 1-5"
    # 午後（JST 12:30 ちょうど）= UTC 03:30
    - cron: "30 3 * * 1-5"
    # 午後（JST 13:00–14:30）= UTC 04:00–05:30
    - cron: "0,30 4-5 * * 1-5"
    # 引け（JST 15:00）= UTC 06:00
    - cron: "0 6 * * 1-5"
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -r requirements.txt

      # stateブランチから trade_state.json を復元
      - name: Restore state file if exists
        shell: bash
        run: |
          set -e
          if git ls-remote --exit-code origin state >/dev/null 2>&1; then
            git fetch origin state
            if git show origin/state:trade_state.json >/dev/null 2>&1; then
              git show origin/state:trade_state.json > trade_state.json
            else
              echo "{}" > trade_state.json
            fi
          else
            echo "{}" > trade_state.json

      - name: Run notifier
        env:
          CHANNEL_ACCESS_TOKEN: ${{ secrets.CHANNEL_ACCESS_TOKEN }}
        run: python swing_notifier.py

      # trade_state.json を state ブランチに保存
      - name: Save state back to branch
        shell: bash
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          if git ls-remote --exit-code origin state >/dev/null 2>&1; then
            git worktree add ../state-worktree origin/state
          else
            git worktree add -b state ../state-worktree HEAD
            pushd ../state-worktree
            rm -rf ./*
            git commit --allow-empty -m "init state branch"
            git push -u origin state
            popd
          fi

          cp trade_state.json ../state-worktree/trade_state.json
          pushd ../state-worktree
          if git diff --quiet -- trade_state.json; then
            echo "No state changes."
          else
            git add trade_state.json
            git commit -m "update state: $(date -u +%FT%TZ)"
            git push origin state
          fi
          popd
