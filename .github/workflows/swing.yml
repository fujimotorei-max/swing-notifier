name: swing-notifier

concurrency:
  group: swing-notifier
  cancel-in-progress: true

on:
  schedule:
    # 場中監視（JST 09:00–15:00 → UTC 00:00–06:00）
    - cron: "0,30 0-6 * * 1-5"
    # 日足チェック（引け後15:10 JST → UTC 06:10）
    - cron: "10 6 * * 1-5"
  workflow_dispatch: {}

permissions:
  contents: write

defaults:
  run:
    shell: bash

jobs:
  run-intraday:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Restore state file
        run: |
          set -euo pipefail
          if git ls-remote --exit-code origin state >/dev/null 2>&1; then
            git fetch origin state
            if git cat-file -e origin/state:trade_state.json 2>/dev/null; then
              git show origin/state:trade_state.json > trade_state.json
            else
              printf "{}" > trade_state.json
            fi
          else
            printf "{}" > trade_state.json
          fi

      - name: Run notifier (intraday)
        env:
          CHANNEL_ACCESS_TOKEN: ${{ secrets.CHANNEL_ACCESS_TOKEN }}
          RUN_MODE: "intraday"
        run: python swing_notifier.py

      - name: Save state back
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          if git ls-remote --exit-code origin state >/dev/null 2>&1; then
            git worktree add ../state-worktree origin/state
          else
            git worktree add -b state ../state-worktree HEAD
            pushd ../state-worktree
            rm -rf ./*
            git commit --allow-empty -m "init state branch"
            git push -u origin state
            popd
          fi

          cp -f trade_state.json ../state-worktree/trade_state.json
          pushd ../state-worktree
          if git diff --quiet -- trade_state.json; then
            echo "No state changes."
          else
            git add trade_state.json
            git commit -m "update state"
            git push origin state
          fi
          popd

  run-daily:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Restore state file
        run: |
          set -euo pipefail
          if git ls-remote --exit-code origin state >/dev/null 2>&1; then
            git fetch origin state
            if git cat-file -e origin/state:trade_state.json 2>/dev/null; then
              git show origin/state:trade_state.json > trade_state.json
            else
              printf "{}" > trade_state.json
            fi
          else
            printf "{}" > trade_state.json
          fi

      - name: Run notifier (daily)
        env:
          CHANNEL_ACCESS_TOKEN: ${{ secrets.CHANNEL_ACCESS_TOKEN }}
          RUN_MODE: "daily"
        run: python swing_notifier.py

      - name: Save state back
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          if git ls-remote --exit-code origin state >/dev/null 2>&1; then
            git worktree add ../state-worktree origin/state
          else
            git worktree add -b state ../state-worktree HEAD
            pushd ../state-worktree
            rm -rf ./*
            git commit --allow-empty -m "init state branch"
            git push -u origin state
            popd
          fi

          cp -f trade_state.json ../state-worktree/trade_state.json
          pushd ../state-worktree
          if git diff --quiet -- trade_state.json; then
            echo "No state changes."
          else
            git add trade_state.json
            git commit -m "update state"
            git push origin state
          fi
          popd
